plugins {
	id 'org.springframework.boot' version '3.0.0-RC1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.graalvm.buildtools.native' version '0.9.16'
	id 'java'
	id "com.diffplug.spotless" version "6.12.0"
}

group = 'com.github.devraghav.bugtracker'
version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url "https://packages.confluent.io/maven" }
}

dependencies {
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

	implementation 'com.github.devraghav.bugtracker:inmemory-eventbus:1.0.0'

	// kafka
	implementation ('io.confluent:kafka-avro-serializer:7.3.0') {
		exclude (group: "jakarta.ws.rs", module: "jakarta.ws.rs-api")
		exclude (group: "io.swagger.core.v3", module: "swagger-annotations")
	}
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.projectreactor.kafka:reactor-kafka'
	implementation 'com.github.devraghav.bugtracker:bug-tracker-schema:1.0.0'

	implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.10.2'
	implementation 'org.projectlombok:lombok'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webflux-ui' , version: '2.0.2'
	implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.2'

	annotationProcessor group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'
	annotationProcessor 'org.projectlombok:lombok'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
}

compileJava {
	options.compilerArgs += ["--enable-preview"]
}

compileTestJava {
	options.compilerArgs += ["--enable-preview"]
}

compileAotJava {
	options.compilerArgs += ["--enable-preview"]
}

compileAotTestJava {
	options.compilerArgs += ["--enable-preview"]
}

processAot {
	jvmArgs("--enable-preview")
}

processTestAot {
	jvmArgs("--enable-preview")
}

tasks.withType(Test).all {
	jvmArgs += '--enable-preview'
}

tasks.named('test') {
	useJUnitPlatform()

}

spotless {
	java {
		toggleOffOn()
		targetExclude('build/**')
		googleJavaFormat()
	}
}
